---
- name: Initialize Docker Swarm on Manager
  hosts: manager
  become: yes
  tasks:
    - name: Check if Swarm is already initialized
      shell: docker info | grep -i 'swarm:' | awk '{print $2}'
      register: swarm_status
      changed_when: false
      failed_when: false

    - name: Initialize Docker Swarm
      command: docker swarm init --advertise-addr {{ ansible_default_ipv4.address }}
      when: swarm_status.stdout != "active"
      register: swarm_init

    - name: Get worker join token
      command: docker swarm join-token worker -q
      register: worker_token
      changed_when: false

    - name: Save worker token
      set_fact:
        swarm_worker_token: "{{ worker_token.stdout }}"

    - name: Save manager IP
      set_fact:
        swarm_manager_ip: "{{ ansible_default_ipv4.address }}"

- name: Join workers to Swarm
  hosts: workers
  become: yes
  tasks:
    - name: Check if already part of Swarm
      shell: docker info | grep -i 'swarm:' | awk '{print $2}'
      register: worker_swarm_status
      changed_when: false
      failed_when: false

    - name: Leave swarm if in wrong state
      command: docker swarm leave --force
      when: worker_swarm_status.stdout == "active"
      failed_when: false

    - name: Join Swarm as worker
      command: docker swarm join --token {{ hostvars[groups['manager'][0]]['swarm_worker_token'] }} {{ hostvars[groups['manager'][0]]['swarm_manager_ip'] }}:2377
      when: worker_swarm_status.stdout != "active"

- name: Verify Swarm cluster
  hosts: manager
  become: yes
  tasks:
    - name: List all nodes in Swarm
      command: docker node ls
      register: node_list

    - name: Display nodes
      debug:
        var: node_list.stdout_lines